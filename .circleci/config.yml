# CircleCI + Docker howto:
# https://circleci.com/docs/2.0/sample-config/
# https://circleci.com/docs/2.0/custom-images/

version: 2.1

executors:
  debian13:
    docker:
      - image: rbrich/xcikit-debian:13
    resource_class: large
  clang19:
    docker:
      - image: rbrich/xcikit-tidy:19
    resource_class: large
  emscripten:
    docker:
      - image: rbrich/xcikit-emscripten:latest
    resource_class: large

jobs:
  build:
    parameters:
      image:
        type: executor
      label:
        type: string
        default: ""
      jobs:
        type: integer
        default: 4
      build-args:
        type: string
        default: ""
    executor: << parameters.image >>
    steps:
      - checkout
      - restore_cache:
          keys:
            - ccache1-<< parameters.label >>-{{ .Branch }}-{{ .Revision }}
            - ccache1-<< parameters.label >>-{{ .Branch }}-
            - ccache1-<< parameters.label >>-
      - run:
          name: Deps
          command: ./build.sh deps << parameters.build-args >>
      - run:
          name: Configure
          command: ./build.sh config << parameters.build-args >>
      - run:
          name: Build
          command: ./build.sh build -j << parameters.jobs >> << parameters.build-args >>
      - run:
          name: Run tests
          command: ./build.sh test << parameters.build-args >>
      - run:
          name: Install
          command: ./build.sh install << parameters.build-args >>
      - run:
          name: Package
          command: |
            ./build.sh package << parameters.build-args >>
            rm -rf artifacts/Linux-*
            rm -rf artifacts/emscripten-*
      - store_artifacts:
          path: artifacts
      - save_cache:
          key: ccache1-<< parameters.label >>-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/.cache/ccache
  conan_package:
    parameters:
      image:
        type: executor
      jobs:
        type: integer
        default: 4
      build-args:
        type: string
        default: ""
    executor: << parameters.image >>
    steps:
      - checkout
      - run:
          name: Detect system deps
          command: ./detect_system_deps.py widgets script | tail -n1 | tee system_deps.txt
      - run:
          name: Conan package
          command: conan create -pr:b=$CONAN_DEFAULT_PROFILE . $(cat system_deps.txt) << parameters.build-args >>

workflows:
  version: 2
  workflow:
    jobs:
      - build:
          name: Debian 13 - GCC 14
          image: debian13
          label: debian13-gcc14
      - build:
          name: Debian 13 - Clang-Tidy 19
          image: clang19
          label: debian13-tidy19
          build-args: "--tidy -DFAIL_ON_WARNINGS=1 -DCMAKE_DISABLE_PRECOMPILE_HEADERS=1"
      - build:
          name: Emscripten
          image: emscripten
          build-args: "--emscripten core vfs data script"
      - conan_package:
          name: Debian 13 - Clang 19 - Conan package
          image: clang19
          build-args: -o xcikit/*:tools=False -o xcikit/*:examples=False -o xcikit/*:tests=False -o xcikit/*:benchmarks=False
