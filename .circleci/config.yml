# CircleCI + Docker howto:
# https://circleci.com/docs/2.0/sample-config/
# https://circleci.com/docs/2.0/custom-images/

version: 2.1

executors:
  debian:
    docker:
      - image: rbrich/xcikit-debian:latest
    resource_class: large
  ubuntu:
    docker:
      - image: rbrich/xcikit-ubuntu:latest
    resource_class: large
  emscripten:
    docker:
      - image: rbrich/xcikit-emscripten:latest
    resource_class: large

jobs:
  build:
    parameters:
      image:
        type: executor
      jobs:
        type: integer
        default: 4
      build-args:
        type: string
        default: ""
    executor: << parameters.image >>
    steps:
      - checkout
      - run:
          name: Deps
          command: ./build.sh deps << parameters.build-args >>
      - run:
          name: Configure
          command: ./build.sh config << parameters.build-args >>
      - run:
          name: Build
          command: ./build.sh build -j << parameters.jobs >> << parameters.build-args >>
      - run:
          name: Run tests
          command: ./build.sh test << parameters.build-args >>
      - run:
          name: Install
          command: ./build.sh install << parameters.build-args >>
      - run:
          name: Package
          command: |
            ./build.sh package << parameters.build-args >>
            rm -rf artifacts/Linux-*
            rm -rf artifacts/emscripten-*
      - store_artifacts:
          path: artifacts

workflows:
  version: 2
  workflow:
    jobs:
      - build:
          name: Debian 11 - GCC 10
          image: debian
      - build:
          name: Ubuntu 22.04 - Clang 14
          image: ubuntu
      - build:
          name: Emscripten
          image: emscripten
          build-args: "--emscripten core data script"
