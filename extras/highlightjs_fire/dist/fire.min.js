/*! `fire` grammar compiled for Highlight.js 11.4.0 */
(()=>{var e=(()=>{"use strict";return e=>{
const n=/\b[A-Z][A-Za-z0-9_]*\b/,a=/\b[a-z][A-Za-z0-9_]*\b/,i={className:"type",
begin:n,relevance:0},t={variants:[{
begin:[a,/\s*:\s*(?=([A-Za-z_()|,\s]|->)+\s*=)/],contains:[i],end:/=/},{
begin:[a,/\s*=/]}],beginScope:{1:"title.function"}},s={
begin:[/\bclass\b/,/\s+/,n,/\s+(?=([A-Za-z_()|,\s]|->)+\{)/],beginScope:{
1:"keyword",3:"title.class"},end:/\}/,contains:[{begin:[a,/\s*:/],beginScope:{
1:"title.function"},contains:[i],end:/($|;)/},i]},b={className:"string",
contains:[e.BACKSLASH_ESCAPE],variants:[{begin:'"',end:'"',illegal:"\\n",
contains:[e.BACKSLASH_ESCAPE]},{begin:"(b)?'("+e.BACKSLASH_ESCAPE+"|.)",end:"'",
illegal:"."},{begin:'"""',end:'"""',contains:[e.BACKSLASH_ESCAPE]}]};return{
name:"Fire",keywords:{
keyword:"catch else fun if import instance in match module then try type with",
literal:"void false true",
type:"Void Bool Byte Char Int Int32 Int64 Float Float32 Float64 String",
built_in:"stdin stdout stderr null"},
contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,t,s,i,{
className:"built_in",begin:"\\b__[A-Za-z_]+\\b"},{className:"number",variants:[{
begin:"(-?)(\\b([\\d]+)([eE][-+]?[\\d]+)?)(f|F)"},{
begin:"(-?)(\\b(\\b[\\d]+\\.[\\d]*)([eE][-+]?[\\d]+)?)(f|F)?"},{
begin:"\\b(0b[01]+)((l|L)(u|U)?|(u|U)(l|L)?|b|B)?"},{
begin:"(-?)\\b(0o[0-7]+|0x[a-fA-F0-9]+)((l|L)(u|U)?|(u|U)(l|L)?|b|B)?"},{
begin:"(-?)\\b([\\d]+)((l|L)(u|U)?|(u|U)(l|L)?|b|B)?"}],relevance:0},b,{
className:"meta",begin:"#",end:"$"},{className:"meta",begin:/^_[0-9]+ \?/,
relevance:10},{className:"variable",begin:"\\b_[0-9]*\\b"}],unicodeRegex:!0,
disableAutodetect:!0}}})();hljs.registerLanguage("fire",e)})();