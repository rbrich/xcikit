name: CI
on: [push]

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-18.04
        - os: windows-2019
        #- os: macos-10.15 -- handled by Travis

    runs-on: ${{ matrix.os }}

    env:
      CONAN_PASSWORD: ${{ secrets.CONAN_PASSWORD }}
      CONAN_REVISIONS_ENABLED: 1
      BUILD_ARGS: core data script

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
        architecture: 'x64'

    - name: install GCC
      if: ${{ matrix.os == 'ubuntu-18.04' }}
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build g++-10
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 50
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 50
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++    50
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc      50

    - name: install dev libs
      if: ${{ matrix.os == 'ubuntu-18.04' }}
      run: |
        sudo apt-get install -y libhyperscan-dev

    - name: install tools
      run: |
        pip3 --no-cache-dir install conan
        conan profile new default --detect

    - name: additional Conan setup for Linux
      if: matrix.os == 'ubuntu-18.04'
      run: conan profile update "settings.compiler.libcxx=libstdc++11" default

    - name: bootstrap
      run: ./bootstrap.sh -y
      shell: bash

    - name: deps
      run: |
        ./build.sh deps $BUILD_ARGS
        conan user -p $CONAN_PASSWORD -r xcikit rbrich
        conan upload "*/*@rbrich/stable" --all --no-overwrite --check --confirm -r=xcikit
      shell: bash

    - name: configure
      run: ./build.sh config $BUILD_ARGS
      shell: bash

    - name: build
      run: ./build.sh build $BUILD_ARGS
      shell: bash

    - name: test
      run: ./build.sh test $BUILD_ARGS
      shell: bash

    - name: install
      run: ./build.sh install $BUILD_ARGS
      shell: bash

    - name: package
      run: ./build.sh package $BUILD_ARGS
      shell: bash
