name: CI
on: [push]

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-10.15, windows-2019]
        build_args: [""]
        name: ["Release build"]
        include:
        - os: macos-10.15
          build_args: "--debug -DBUILD_WITH_ASAN=1 -DBUILD_WITH_UBSAN=1"
          name: "Debug build + ASAN"

    name: ${{ matrix.os }} ${{ matrix.name }}

    runs-on: ${{ matrix.os }}

    env:
      CONAN_PASSWORD: ${{ secrets.CONAN_PASSWORD }}
      CONAN_REVISIONS_ENABLED: 1
      BUILD_ARGS: core data script ${{ matrix.build_args }}

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
        architecture: 'x64'

    - name: "ubuntu: install GCC, dev libs"
      if: ${{ matrix.os == 'ubuntu-18.04' }}
      run: |
        sudo apt-get update
        sudo apt-get install -y g++-10 ninja-build libhyperscan-dev
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 50
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 50
        sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++    50
        sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc      50

    - name: "macos: install Clang, dev libs"
      if: ${{ matrix.os == 'macos-10.15' }}
      run: |
        brew install conan ccache ninja glfw doxygen google-benchmark hyperscan vulkan-headers
        echo "CC='$(brew --prefix llvm)/bin/clang'" >> $GITHUB_ENV
        echo "CXX='$(brew --prefix llvm)/bin/clang++'" >> $GITHUB_ENV

    - name: install tools
      run: |
        pip3 --no-cache-dir install conan
        conan profile new default --detect

    - name: "ubuntu: additional Conan setup"
      if: matrix.os == 'ubuntu-18.04'
      run: conan profile update "settings.compiler.libcxx=libstdc++11" default

    - name: "macos: additional Conan setup"
      if: ${{ matrix.os == 'macos-10.15' }}
      run: conan profile update "settings.compiler.libcxx=libc++" default

    - name: bootstrap
      run: ./bootstrap.sh
      shell: bash

    - name: deps
      run: ./build.sh deps $BUILD_ARGS
      shell: bash

    - name: configure
      run: ./build.sh config $BUILD_ARGS
      shell: bash

    - name: build
      run: ./build.sh build $BUILD_ARGS
      shell: bash

    - name: test
      run: ./build.sh test $BUILD_ARGS
      shell: bash

    - name: install
      run: ./build.sh install $BUILD_ARGS
      shell: bash

    - name: package
      run: ./build.sh package $BUILD_ARGS
      shell: bash

#    - name: deploy conan package
#      if: github.ref == 'refs/heads/master'
#      run: |
#        conan remote add xcikit https://api.bintray.com/conan/rbrich/xcikit
#        conan user -p $CONAN_PASSWORD -r xcikit rbrich
#        conan upload "xcikit/*@rbrich/stable" --all --no-overwrite --check --confirm -r=xcikit
#      shell: bash
